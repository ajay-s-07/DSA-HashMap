Given an array of integers arr of even length n and an integer k.

We want to divide the array into exactly n / 2 pairs such that the sum of each pair is divisible by k.

Return true If you can find a way to do that or false otherwise.

Example 1:

Input: arr = [1,2,3,4,5,10,6,7,8,9], k = 5
Output: true
Explanation: Pairs are (1,9),(2,8),(3,7),(4,6) and (5,10).


public boolean canArrange(int[] arr, int k) {
    int n = arr.length;
    HashMap<Integer,Integer> map = new HashMap<>();
    
    for(int i=0; i<n; i++){
        int rem = arr[i]%k;
        if(rem < 0) // to deal with negatives
            rem+=k;
        map.put(rem,map.getOrDefault(rem,0)+1);
    }
    
    for(int i=0; i<n; i++){
        int rem = arr[i]%k;
        if(rem < 0)
            rem+=k;
        if(rem == 0){
            if(map.get(rem)%2==1)
                return false;
        }
        else{
            int a = map.get(rem);
            int b =0;
            if(map.containsKey(k-rem))
                b = map.get(k-rem);
            if(a != b)
                return false;
        }
    }
    
    return true;
}
