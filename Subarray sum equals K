Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k.

public static void main (String[] args) throws java.lang.Exception
	{
		Scanner sc = new Scanner(System.in);
          int n = sc.nextInt();
          int x = 11
          int[]arr = new int[n];
          for(int i=0; i<n; i++){
            arr[i] = sc.nextInt();
          }
          int k = sc.nextInt();
          System.out.print(subarray(arr,k));
	}
        public static int subarray(int[]arr, int k)
        {
                int n = arr.length;
                HashMap<Integer,Integer> map = new HashMap<>();
                map.put(0,1);
                int sum = 0;
                int count = 0;
                for(int i=0; i<n; i++){
                        sum+=arr[i];
                        int rem = sum-k;
                        if(map.containsKey(rem)){
                                count+= map.get(rem);
                        }
                        map.put(sum,map.getOrDefault(sum,0)+1);
                }
                return count;
        }
